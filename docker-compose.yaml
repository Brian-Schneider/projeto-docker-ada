version: "3.8"

services: 

  backend: 
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    healthcheck:
       test: ["CMD", "curl", "-f", "http://localhost"]
       interval: 15s
       timeout: 10s
       retries: 3
       start_period: 10s
    environment:
      - POSTGRESHOST=database
      - POSTGRESPORT=5432
      - POSTGRESDATABASE=elasexatas
      - POSTGRESUSER=postgres
      - POSTGRESPASSWORD=postgres
    ports:  
      - "5002:8080"
    networks:
      - backend
      - frontend

  database:
    container_name: database
    image: postgres:15
    environment: 
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: elasexatas
    volumes: 
      - "db-data:/var/lib/postgresql/data"
      - "./utils/healthchecks:/healthchecks"
    healthcheck:
      test: "/healthchecks/postgres.sh"
      interval: "5s"
    ports: 
      - "5432:5432"
    networks:
      - backend

  frontend:
    container_name: frontend
    build: 
      context: ./frontend
      dockerfile: Dockerfile
  #  depends_on:
   #   database:
    #    condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 10s
    ports: 
      - "5001:5173"
    networks:
      - frontend
      - backend

volumes: 
  db-data:    

networks:
  backend: 
  frontend: